generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model EducationForm {
  id           Int                        @id @default(autoincrement())
  name         String                     @unique @db.VarChar(7)
  groups       Group[]
  translations EducationFormTranslation[]
}

model EducationFormTranslation {
  id Int @id @default(autoincrement())

  language String @unique
  name     String @unique

  educationForm   EducationForm? @relation(fields: [educationFormId], references: [id])
  educationFormId Int?
}

model Faculty {
  id           Int                  @id @default(autoincrement())
  name         String               @unique @db.VarChar(64)
  groups       Group[]
  translations FacultyTranslation[]
}

model FacultyTranslation {
  id Int @id @default(autoincrement())

  language String @unique
  name     String @unique

  faculty   Faculty? @relation(fields: [facultyId], references: [id])
  facultyId Int?
}

model Course {
  id     Int     @id @default(autoincrement())
  number Int     @unique
  groups Group[]
}

model Group {
  id              Int                 @id @default(autoincrement())
  educationForm   EducationForm       @relation(fields: [educationFormId], references: [id])
  educationFormId Int
  faculty         Faculty             @relation(fields: [facultyId], references: [id])
  facultyId       Int
  course          Course              @relation(fields: [courseId], references: [id])
  courseId        Int
  number          String
  schedules       SchedulesOnGroups[]

  @@unique([educationFormId, facultyId, courseId, number])
}

model WeekDay {
  id           Int                  @id @default(autoincrement())
  name         String               @unique @db.VarChar(11)
  schedules    Schedule[]
  translations WeekDayTranslation[]
}

model WeekDayTranslation {
  id Int @id @default(autoincrement())

  language String @unique
  name     String @unique

  weekDay   WeekDay? @relation(fields: [weekDayId], references: [id])
  weekDayId Int?
}

model WeekType {
  id           Int                   @id @default(autoincrement())
  name         String                @unique
  schedules    Schedule[]
  translations WeekTypeTranslation[]
}

model WeekTypeTranslation {
  id Int @id @default(autoincrement())

  language String @unique
  name     String @unique

  weekType   WeekType? @relation(fields: [weekTypeId], references: [id])
  weekTypeId Int?
}

model Time {
  id        Int        @id @default(autoincrement())
  start     DateTime
  end       DateTime
  schedules Schedule[]

  @@unique([start, end])
}

model Subject {
  id           Int                  @id @default(autoincrement())
  name         String               @unique @db.VarChar(128)
  schedules    Schedule[]
  translations SubjectTranslation[]
}

model SubjectTranslation {
  id Int @id @default(autoincrement())

  language String @unique
  name     String @unique

  subject   Subject? @relation(fields: [subjectId], references: [id])
  subjectId Int?
}

model SubjectType {
  id           Int                      @id @default(autoincrement())
  name         String                   @unique @db.VarChar(24)
  schedules    Schedule[]
  translations SubjectTypeTranslation[]
}

model SubjectTypeTranslation {
  id Int @id @default(autoincrement())

  language String @unique
  name     String @unique

  subjectType   SubjectType? @relation(fields: [subjectTypeId], references: [id])
  subjectTypeId Int?
}

model Teacher {
  id           Int                  @id @default(autoincrement())
  initials     String               @unique
  schedules    Schedule[]
  translations TeacherTranslation[]
}

model TeacherTranslation {
  id Int @id @default(autoincrement())

  language String @unique
  initials String @unique

  teacher   Teacher? @relation(fields: [teacherId], references: [id])
  teacherId Int?
}

model Auditorium {
  id         Int        @id @default(autoincrement())
  number     Int        @unique
  building   Building   @relation(fields: [buildingId], references: [id])
  buildingId Int
  schedules  Schedule[]

  @@unique([buildingId, number])
}

model Building {
  id         Int          @id @default(autoincrement())
  number     String       @unique @db.VarChar(3)
  auditories Auditorium[]
}

model Schedule {
  id     Int                 @id @default(autoincrement())
  groups SchedulesOnGroups[]

  weekDay       WeekDay     @relation(fields: [weekDayId], references: [id])
  weekDayId     Int
  weekType      WeekType    @relation(fields: [weekTypeId], references: [id])
  weekTypeId    Int
  time          Time        @relation(fields: [timeId], references: [id])
  timeId        Int
  subject       Subject     @relation(fields: [subjectId], references: [id])
  subjectId     Int
  subjectType   SubjectType @relation(fields: [subjectTypeId], references: [id])
  subjectTypeId Int
  teacher       Teacher     @relation(fields: [teacherId], references: [id])
  teacherId     Int
  auditorium    Auditorium  @relation(fields: [auditoriumId], references: [id])
  auditoriumId  Int

  @@unique([weekDayId, weekTypeId, timeId, subjectId, subjectTypeId, teacherId, auditoriumId])
}

model SchedulesOnGroups {
  group      Group    @relation(fields: [groupId], references: [id])
  groupId    Int
  schedule   Schedule @relation(fields: [scheduleId], references: [id])
  scheduleId Int

  @@id([groupId, scheduleId])
}

model Exam {
  id           Int               @id @default(autoincrement())
  name         String            @unique @db.VarChar(48)
  desctiption  String?           @db.VarChar(256)
  date         DateTime
  translations ExamTranslation[]
}

model ExamTranslation {
  id Int @id @default(autoincrement())

  language    String @unique
  name        String @unique
  desctiption String

  exam   Exam? @relation(fields: [examId], references: [id])
  examId Int?
}

model News {
  id           Int               @id @default(autoincrement())
  title        String            @unique @db.VarChar(48)
  description  String            @db.VarChar(256)
  translations NewsTranslation[]
}

model NewsTranslation {
  id Int @id @default(autoincrement())

  language    String @unique
  title       String @unique
  description String

  news   News? @relation(fields: [newsId], references: [id])
  newsId Int?
}
